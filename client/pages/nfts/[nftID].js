import { useRouter } from "next/router";
import { useStateContext } from "../../context";
import { useEffect, useState } from "react";
import Head from "next/head";
import { Footer, Navbar } from "../../components";
import Image from "next/image";

export default function SingleNFT() {
  const router = useRouter();
  const [NFT, setNFT] = useState([]);

  const {
    getSingleNFT,
    address,
    contract,
    buyNFT,
    connect,
    listNFT,
    unlistNFT,
  } = useStateContext();
  const { nftID } = router.query;

  const fetchNFT = async () => {
    const data = await getSingleNFT(nftID);
    setNFT(data);
  };

  useEffect(() => {
    if (contract) fetchNFT();
  }, [address, contract]);

  console.log(NFT);

  const showButton = () => {
    if (NFT.isShowcase) {
      return (
        <p className="text-2xl text-left font-bold  tracking-wide text-gray-200 leading-none mt-4 pr-10">
          This NFT is currently in the showcase and is not available for sale.
        </p>
      );
    } else {
      if (!address) {
        return (
          <button
            className="border-2 border-blue-600 shadow-2xl shadow-blue-500/30 text-white font-bold py-4 px-28 rounded-full mt-10 w-fit hover:bg-blue-600 hover:shadow-blue-500/60 duration-300 transition-all md:py-4 md:px-16"
            onClick={() => connect()}
          >
            Connect
          </button>
        );
      } else if (address && NFT.owner === address) {
        if (NFT.isListed) {
          return (
            <button
              className="border-2 border-violet-600 shadow-2xl shadow-violet-500/30 text-white font-bold py-4 px-28 rounded-full mt-10 w-fit hover:bg-violet-600 hover:shadow-violet-500/60 duration-300 transition-all md:py-4 md:px-16"
              onClick={() => unlistNFT(nftID)}
            >
              Unlist NFT
            </button>
          );
        } else {
          return (
            <button
              className="border-2 border-emerald-600 shadow-2xl shadow-emerald-500/30 text-white font-bold py-4 px-28 rounded-full mt-10 w-fit hover:bg-emerald-600 hover:shadow-emerald-500/60 duration-300 transition-all md:py-4 md:px-16"
              onClick={() => listNFT(nftID)}
            >
              List NFT
            </button>
          );
        }
      } else {
        return (
          <button
            className="border-2 border-rose-600 shadow-2xl shadow-rose-500/30 text-white font-bold py-4 px-28 rounded-full mt-10 w-fit hover:bg-rose-600 hover:shadow-rose-500/60 duration-300 transition-all md:py-4 md:px-16"
            onClick={() => buyNFT(nftID)}
          >
            Buy
          </button>
        );
      }
    }
  };

  return (
    <main className=" ">
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Navbar />

      <section className="container mx-auto mt-10 min-h-screen md:max-h-screen px-5 md:px-0 md:mt-14">
        <h1 className="text-6xl font-bold tracking-wide text-white leading-none text-left md:hidden mb-16">
          {NFT.name}
        </h1>
        <div className="flex flex-col justify-between items-top md:flex-row space-y-10  mx-auto md:space-y-0 md:space-x-10   md:h-screen">
          <div className="flex w-full md:w-1/2 md:h-2/3">
            {NFT.image && (
              <Image
                src={NFT.image}
                alt={`NFT Image	${NFT.name}}`}
                width={1000}
                height={750}
                className="w-full h-full object-cover rounded-3xl shadow-[0_20px_50px_rgba(109,_40,_217,_0.15)] "
              />
            )}
          </div>
          <div className="flex flex-col w-full justify-between items-start  md:w-1/2 md:h-1/5">
            <h1 className="hidden text-6xl  font-bold  tracking-wide text-white leading-none text-left md:block ">
              {NFT.name}
            </h1>

            <div className="flex md:mt-5 space-x-5">
              <Image
                src="/images/ellie3.png"
                alt="Owner Icon"
                height={50}
                width={50}
                className="rounded-full"
              />
              <p className="text-2xl text-left font-bold  tracking-wide text-gray-500 leading-none mt-4 pr-10 break-all">
                {NFT.owner && (
                  <>
                    {NFT.owner.split("")[0]}
                    {NFT.owner.split("")[1]}
                    {NFT.owner.split("")[2]}
                    {NFT.owner.split("")[3]}
                    {NFT.owner.split("")[4]}
                    {NFT.owner.split("")[5]}...
                    {NFT.owner.split("")[NFT.owner.length - 5]}
                    {NFT.owner.split("")[NFT.owner.length - 4]}
                    {NFT.owner.split("")[NFT.owner.length - 3]}
                    {NFT.owner.split("")[NFT.owner.length - 2]}
                    {NFT.owner.split("")[NFT.owner.length - 1]}
                  </>
                )}
              </p>
            </div>

            <div className="border-2 border-rose-500 w-full my-5 shadow-[0_20px_50px_rgba(225,_29,_72,_0.6)]"></div>

            <p className="text-2xl text-left font-bold  tracking-wide text-gray-200 leading-none mt-4 pr-10">
              {NFT.description}
            </p>
            <p className="text-2xl text-left font-bold  tracking-wide text-gray-500 leading-none mt-4 pr-10">
              Price: {NFT.price} <span className="text-violet-600">ETH</span>
            </p>
            <div className="flex justify-center mx-auto md:justify-end md:mx-0">
              {showButton()}
            </div>
          </div>
        </div>
      </section>

      <Footer />
    </main>
  );
}
